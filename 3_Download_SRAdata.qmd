# Verify Downloaded Data

> Aim: To confirm successful data download, folder structure organization, and assess the quality of the retrieved files.
>
> -   **Author**: Evelia Coss
> -   **Date**: 1/July/2025
> -   **Input files:**
>     -   [`SRA_names_carpetas.txt`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/quality_rawdata/SRA_names_carpetas.txt): Generated from all raw data downloaded to the cluster, located under `/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads`. This file is stored in the `quality_metadata` directory.
>     -   [`complete_metadata.RData`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/complete_metadata.RData): This RData file contains a consolidated set of key objects used in workflows for antimicrobial resistance analysis and sequencing metadata. It supports smooth transitions between preprocessing, integration, and analysis stages. See complete details in [**Chapter 2**](https://eveliacoss.github.io/CAMDA2025_metadatos/2_Preprocessing_CAMDApublicdata.html).
> -   **Output files:**
>     -   [`species_ids_carpetas folder`](https://github.com/EveliaCoss/CAMDA2025_metadatos/tree/main/quality_rawdata/species_ids_carpetas): This directory contains the `.txt` files generated by the `save_ids()` function. Each file corresponds to a single species and includes only the SRA accession IDs, separated by training and test sets. These files are used to organize and manage species-specific accessions for downstream processing.
> -   **Functions:**
>     -   [`create_species()`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/functions/create_species_function.R): Parses metadata to create species-specific variables containing accession IDs, species names, and an `info` status label:
>         -   `Training_data_download, Training_data_missing, Test_data_download, Test_data_missing.`
>     -   [`save_ids()`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/functions/Save_ids_files.R): Generates `.txt` files per species with only accession IDs, separated by training and test groups, based on the variables created by `create_species_function()`.

Crear archivo solo de los datos que se encuentren descargados

``` bash
find raw/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \; > SRA_names_carpetas.txt
```

Lo descargue en mi computadora dentro de la carpeta donde se respalda Github.

``` bash
scp ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/SRA_names_carpetas.txt .
```

## To do list

-   Checar cuanto porcentage de descarga tenemos de los datos
-   Mover a sus respectivas carpetas por especies
-   Orden de las carpetas, clasificar por Herramienta/equipo de secuenciacion (Illumina, PacBio, Nanopore), Tamaños de los reads, Tipos de bibliotecas (PE/SE)
-   Mover los FastQC a sus respectivas carpeta y correr MultiQC

Load packages

```{r packages, message=FALSE, warning=FALSE}
library(tidyverse)
library(DT)        # Tablas bonitas
library(here)
```

Import Data

```{r}
# Load metadata cleaned and antibiogram information
load(here("rawdata/TrainAndTest_cleaned", "complete_metadata.RData"))

# Load information about download rawdata, import as data.frame
SRA_down <- read.table(here("quality_rawdata", "SRA_names_carpetas.txt"), header = FALSE, col.names = "accession")
```

Clasificacion de los datos descargados

```{r}
# Combina los datos de test y training en un solo data frame con una columna fuente
info_combined <- bind_rows(
  test_completeInfo_db %>% mutate(info = "Test_data"),
  training_cleanedInfo_db %>% mutate(info = "Training_data")) %>%
  select(accession, scientific_name_CAMDA, info)

# Une con SRA_down y asigna 'missing' si no hay coincidencias
SRA_down_joined_data <- SRA_down %>%
  full_join(info_combined, by = "accession") %>%
  mutate(info = if_else(accession %in% SRA_down$accession, paste0(info,"_download") , paste0(info,"_missing")))

table(SRA_down_joined_data$info)
```

De que especies ya tenemos informacion

```{r}
SRA_down_joined_data %>%
  group_by(scientific_name_CAMDA, info) %>%
  summarise(n_accession = n_distinct(accession)) %>%
  arrange(desc(n_accession))  %>%
  DT::datatable()
```

## Acomodo de las carpetas por especie

Esperaria contar con 9 carpetas, unas por cada especie, ademas de tener subcarpetas relacionadas con el equipo de secuenciacion (Illumina, Nanopore, PacBio), tipo de bibliotecas (paired-end, single-end), asi como de los tamaños de los reads. Viendose algo como eso:

```         
/raw_data/
├── Especie_1/
│   ├── illumina/
│   │   ├── paired_end/
│   │   └── single_end/
│   ├── pacbio/
│   │   └── single_end/
│   └── nanopore/
│       └── single_end/
├── Especie_2/
│   ├── illumina/
│   │   ├── paired_end/
│   │   └── single_end/
│   ├── pacbio/
│   │   └── single_end/
│   └── nanopore/
│       └── single_end/
...
└── Especie_9/
    ├── illumina/
    │   ├── paired_end/
    │   └── single_end/
    ├── pacbio/
    │   └── single_end/
    └── nanopore/
        └── single_end/
```

Información sobre los tipos de bibliotecas:

-   **`PAIRED`**: indica que es una **secuenciación por pares (paired-end)**, es decir, se han secuenciado ambos extremos de un fragmento de ADN.
-   **`SINGLE`**: significa que las lecturas son **de un solo extremo** (single-end), es decir, se secuencia solo un extremo de cada fragmento de ADN.

Información sobrelas tecnologias de secuenciacion:

-   **`LS454`**: se refiere a la tecnología de secuenciación **Roche/454 Life Sciences**, una de las primeras plataformas de secuenciación masiva (ya descontinuada).
-   **`PACBIO_SMRT`**: se refiere a la tecnología de **Pacific Biosciences (PacBio)** usando su plataforma **SMRT (Single Molecule Real-Time)** sequencing.
-   **`ILLUMINA`**: Tecnología de secuenciación de segunda generación, que es la plataforma más común y extendida para NGS. Produce lecturas cortas (100-300 pb típicamente) con alta precisión y gran volumen.
-   **`OXFORD_NANOPORE`**: Plataforma de secuenciación desarrollada por Oxford Nanopore Technologies, que produce lecturas muy largas en tiempo real mediante la detección de cambios en corriente eléctrica cuando el ADN pasa por un poro nanopore.

### Test information

Vamos a revisar que tipos de datos esperamos tener de las secuenciaciones para generar las carpetas relacionadas

```{r}
# 1. Expandir accession IDs en antibiograms_db
antibiograms_expanded <- antibiograms_db %>%
  separate_rows(accession, read_type, sep = " ")  # cambia el separador si es coma por row

# 2. Unir con test_completeInfo_db por accession
test_joined_data <- test_completeInfo_db %>%
  left_join(antibiograms_expanded %>% select(accession, read_type),
            by = "accession")

# 3. Resultado
table(test_joined_data$read_type)
```

Distribucion por especies y tecnologias de secuenciacion

```{r}
test_joined_data %>%
  group_by(scientific_name_CAMDA, read_type) %>%
  summarise(n_accession = n_distinct(accession)) %>%
  arrange(desc(n_accession))  %>%
  DT::datatable()
```

### Training information

Vamos a revisar que tipos de datos esperamos tener de las secuenciaciones para generar las carpetas relacionadas

```{r}
# 2. Unir con training_cleanedInfo_db por accession
training_joined_data <- training_cleanedInfo_db %>%
  left_join(antibiograms_expanded %>% select(accession, read_type),
            by = "accession")

# 3. Resultado
table(training_joined_data$read_type)
```

Distribucion por especies y tecnologias de secuenciacion

```{r}
training_joined_data %>%
  group_by(scientific_name_CAMDA, read_type) %>%
  summarise(n_accession = n_distinct(accession)) %>%
  arrange(desc(n_accession))  %>%
  DT::datatable()
```

### SRA de las especies

Cargar funcion

```{r}
# Separar las especies en variables individuales especie_ids
source("functions/create_species_function.R")
# Funcion que genera archivos txt de solo SRA 
source("functions/Save_ids_files.R")
```

Extraer una variable por especie

```{r}
# Generar una variable por especie
create_species_variables(SRA_down_joined_data, "scientific_name_CAMDA")

# IDs de las especies descargadas 
save_ids(ngonorrhoeae_ids, "ngonorrhoeae", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(abaumannii_ids, "abaumannii", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(cjejuni_ids, "cjejuni", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(ecoli_ids, "ecoli", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(kpneumoniae_ids, "kpneumoniae", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(paeruginosa_ids, "paeruginosa", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(saureus_ids, "saureus", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(senterica_ids, "senterica", ruta_salida = "quality_rawdata/species_ids_carpetas")
save_ids(spneumoniae_ids, "spneumoniae", ruta_salida = "quality_rawdata/species_ids_carpetas")
```

Subir los archivos en el cluster

``` bash
scp scripts/move_ids.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts
# Script: Crear symlinks de los rawdata (raw/) y almacenarlo por especies en rawspecies/
scp scripts/links_rawdata_byspecies.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts
# Script: Crear symlinks de los fastqc (quality/fastqc/) y almacenarlo por especies en quality_byspecies/
scp scripts/links_fastqc_byspecies.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts
```

Subir la carpeta con los IDs

``` bash
scp -v -r quality_rawdata/species_ids_carpetas ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts
```

Cargar funcion y crear symlinks de los rawdata

``` bash
# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads
# cargar funcion
source scripts/move_ids.sh # no tengo permisos
source scripts/links_rawdata_byspecies.sh

# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads
link_ids scripts/species_ids_carpetas/abaumannii_test_ids.txt test abaumannii
link_ids scripts/species_ids_carpetas/abaumannii_training_ids.txt training abaumannii
#
link_ids scripts/species_ids_carpetas/cjejuni_test_ids.txt test cjejuni
link_ids scripts/species_ids_carpetas/cjejuni_training_ids.txt training cjejuni
#
link_ids scripts/species_ids_carpetas/ecoli_test_ids.txt test ecoli
link_ids scripts/species_ids_carpetas/ecoli_training_ids.txt training ecoli
#
# link_ids scripts/species_ids_carpetas/kpneumoniae_test_ids.txt test kpneumoniae
link_ids scripts/species_ids_carpetas/kpneumoniae_training_ids.txt training kpneumoniae
#
link_ids scripts/species_ids_carpetas/ngonorrhoeae_test_ids.txt test ngonorrhoeae
link_ids scripts/species_ids_carpetas/ngonorrhoeae_training_ids.txt training ngonorrhoeae
#
link_ids scripts/species_ids_carpetas/paeruginosa_test_ids.txt test paeruginosa
link_ids scripts/species_ids_carpetas/paeruginosa_training_ids.txt training paeruginosa
#
link_ids scripts/species_ids_carpetas/saureus_test_ids.txt test saureus
link_ids scripts/species_ids_carpetas/saureus_training_ids.txt training saureus
#
link_ids scripts/species_ids_carpetas/senterica_test_ids.txt test senterica
link_ids scripts/species_ids_carpetas/senterica_training_ids.txt training senterica
#
link_ids scripts/species_ids_carpetas/spneumoniae_test_ids.txt test spneumoniae
link_ids scripts/species_ids_carpetas/spneumoniae_training_ids.txt training spneumoniae
```

Informacion de las carpetas contenidas:

``` bash
ls -la raw_byspecies/*
raw_byspecies/abaumannii:
total 28
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:04 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio  4096 jun 25 23:03 test
drwxr-xr-x  2 ecoss bio 16384 jun 25 23:04 training

raw_byspecies/cjejuni:
total 52
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:04 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 16384 jun 25 23:04 test
drwxr-xr-x  2 ecoss bio 24576 jun 25 23:04 training

raw_byspecies/ecoli:
total 48
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 20480 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 20480 jun 25 23:05 training

raw_byspecies/kpneumoniae:
total 12
drwxr-xr-x  3 ecoss bio 4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training

raw_byspecies/ngonorrhoeae:
total 48
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio  4096 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 32768 jun 25 23:05 training

raw_byspecies/paeruginosa:
total 16
drwxr-xr-x  4 ecoss bio 4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training

raw_byspecies/saureus:
total 64
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 24576 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 24576 jun 25 23:05 training

raw_byspecies/senterica:
total 16
drwxr-xr-x  4 ecoss bio 4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training

raw_byspecies/spneumoniae:
total 40
drwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .
drwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..
drwxr-xr-x  2 ecoss bio 16384 jun 25 23:05 test
drwxr-xr-x  2 ecoss bio 16384 jun 25 23:05 training
```

Cargar funcion y crear symlink de los fastqc por especies

``` bash
# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads
# cargar funcion
source scripts/links_fastqc_byspecies.sh

# > abaumannii
link_fastqc_by_species scripts/species_ids_carpetas/abaumannii_test_ids.txt test abaumannii # sin reportes
link_fastqc_by_species scripts/species_ids_carpetas/abaumannii_training_ids.txt training abaumannii

# correr multiqc
multiqc quality_byspecies/abaumannii/training -n multiqc_abaumannii_training.html -o quality_byspecies/multiqc_report

# /// MultiQC 🔍 v1.29
# 
#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/abaumannii/training
#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1264/1264  
#             fastqc | Found 632 reports
#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_abaumannii_training_data
#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_abaumannii_training.html
#            multiqc | MultiQC complete

# > cjejuni
link_fastqc_by_species scripts/species_ids_carpetas/cjejuni_test_ids.txt test cjejuni # sin reportes link_fastqc_by_species scripts/species_ids_carpetas/cjejuni_training_ids.txt training cjejuni

# correr multiqc
multiqc quality_byspecies/cjejuni/training -n multiqc_cjejuni_training.html -o quality_byspecies/multiqc_report

# /// MultiQC 🔍 v1.29
# 
#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/cjejuni/training
#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2132/2132  
#             fastqc | Found 1066 reports
#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_cjejuni_training_data
#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_cjejuni_training.html
#            multiqc | MultiQC complete

# > ecoli
link_fastqc_by_species scripts/species_ids_carpetas/ecoli_test_ids.txt test ecoli
link_fastqc_by_species scripts/species_ids_carpetas/ecoli_training_ids.txt training ecoli

# correr multiqc
multiqc quality_byspecies/ecoli/training -n multiqc_ecoli_training.html -o quality_byspecies/multiqc_report

# /// MultiQC 🔍 v1.29
# 
#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/ecoli/training
#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1894/1894  
#             fastqc | Found 947 reports
#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_ecoli_training_data
#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_ecoli_training.html
#            multiqc | MultiQC complete


# > kpneumoniae - sin reporte en ambos
link_fastqc_by_species scripts/species_ids_carpetas/kpneumoniae_test_ids.txt test kpneumoniae
link_fastqc_by_species scripts/species_ids_carpetas/kpneumoniae_training_ids.txt training kpneumoniae

# correr multiqc
multiqc quality_byspecies/kpneumoniae/training -n multiqc_kpneumoniae_training.html -o quality_byspecies/multiqc_report

           
# > ngonorrhoeae
link_fastqc_by_species scripts/species_ids_carpetas/ngonorrhoeae_test_ids.txt test ngonorrhoeae
link_fastqc_by_species scripts/species_ids_carpetas/ngonorrhoeae_training_ids.txt training ngonorrhoeae

# correr multiqc
multiqc quality_byspecies/ngonorrhoeae/training -n multiqc_ngonorrhoeae_training.html -o quality_byspecies/multiqc_report

# /// MultiQC 🔍 v1.29
# 
#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/ngonorrhoeae/training
#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2836/2836  
#             fastqc | Found 1418 reports
#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_ngonorrhoeae_training_data
#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_ngonorrhoeae_training.html
#            multiqc | MultiQC complete 

# > Sin reporte de fastqc
link_fastqc_by_species scripts/species_ids_carpetas/paeruginosa_test_ids.txt test paeruginosa
link_fastqc_by_species scripts/species_ids_carpetas/paeruginosa_training_ids.txt training paeruginosa

# correr multiqc
multiqc quality_byspecies/paeruginosa/training -n multiqc_paeruginosa_training.html -o quality_byspecies/multiqc_report

# > saureus
link_fastqc_by_species scripts/species_ids_carpetas/saureus_test_ids.txt test saureus
link_fastqc_by_species scripts/species_ids_carpetas/saureus_training_ids.txt training saureus

# correr multiqc
multiqc quality_byspecies/saureus/training -n multiqc_saureus_training.html -o quality_byspecies/multiqc_report

# /// MultiQC 🔍 v1.29
# 
#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/saureus/training
#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1796/1796  
#             fastqc | Found 898 reports
#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_saureus_training_data
#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_saureus_training.html
#            multiqc | MultiQC complete

# > senterica
link_fastqc_by_species scripts/species_ids_carpetas/senterica_test_ids.txt test senterica
link_fastqc_by_species scripts/species_ids_carpetas/senterica_training_ids.txt training senterica

# correr multiqc
multiqc quality_byspecies/senterica/training -n multiqc_senterica_training.html -o quality_byspecies/multiqc_report

# > spneumoniae
link_fastqc_by_species scripts/species_ids_carpetas/spneumoniae_test_ids.txt test spneumoniae
link_fastqc_by_species scripts/species_ids_carpetas/spneumoniae_training_ids.txt training spneumoniae

# correr multiqc
multiqc quality_byspecies/spneumoniae/training -n multiqc_spneumoniae_training.html -o quality_byspecies/multiqc_report
```

Descargar archivos

``` bash
# /Users/ecoss/Documents/CAMDA2025_metadatos/quality_rawdata
scp -r ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/multiqc_report/*html .
```

> one of the Staphylococcus aureus accession codes is incorrect, as follows: ***SRR2101499 should be ERR1197981*** [Bradley, et al. 2016. Nature](https://www.nature.com/articles/ncomms11465)
>
> De acuerdo a [ENA](https://www.ebi.ac.uk/ena/browser/text-search?query=SRR2101499), este ***SRR2101499*** corresponde a *Mycobacterium tuberculosis*.

SRR1187837 y SRR1187838 - E.coli UCI 54

SRR3982215 - E.coli

SRR3996243

## Eliminacion de secuencias de mala calidad y de adaptadores

Trim Galore! o Trimmomatic - Solo illumina

Filtlong o NanoFilt - Oxford Nanopore / PacBio

Cutadapt o Prinseq-lite - SOLiD / Ion Torrent / 454

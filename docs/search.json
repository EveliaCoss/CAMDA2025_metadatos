[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CAMDA2025 metadatos",
    "section": "",
    "text": "CAMDA 2025\nAnalisis de los metadatos proporcionados por CAMDA, tanto training dataset como de testing.",
    "crumbs": [
      "CAMDA 2025"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html",
    "href": "2_Preprocessing_CAMDApublicdata.html",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "",
    "text": "2.1 Load packages\nCode\nlibrary(tidyverse)\nlibrary(DT)        # Tablas bonitas\nlibrary(here)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#step-1.-import-metadata-and-change-format",
    "href": "2_Preprocessing_CAMDApublicdata.html#step-1.-import-metadata-and-change-format",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.2 STEP 1. Import Metadata and change format",
    "text": "2.2 STEP 1. Import Metadata and change format\n\n\nCode\n# &gt; training dataset\ntraining_metadata &lt;- read_csv(here(\"rawdata/TrainAndTest_dataset\",  \"training_dataset.csv\"))\n\n\nRows: 6144 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (15): genus, species, accession, phenotype, antibiotic, measurement_sign...\ndbl  (1): measurement_value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# rename species\ntraining_metadata_db &lt;- training_metadata %&gt;%\n  mutate(scientific_name_CAMDA = paste(genus, species, sep = \" \")) \n# Rows: 6144 Columns: 16── Column\n\n# &gt; test dataset\ntest_metadata &lt;- read_csv(here(\"rawdata/TrainAndTest_dataset\",  \"testing_template.csv\"))\n\n\nRows: 5345 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): genus, species, accession, phenotype, antibiotic, measurement_value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# rename species\ntest_metadata_db &lt;- test_metadata %&gt;%\n  mutate(scientific_name_CAMDA = paste(genus, species, sep = \" \")) \n# Rows: 5345 Columns: 6── Column\n\n# &gt; Load public metadata from NCBI\nsra_metadata &lt;- read_csv(here(\"metadata\", \"sra-metadata.csv\")) \n\n\nRows: 11510 Columns: 47\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): Run, AssemblyName, download_path, Experiment, LibraryName, Librar...\ndbl  (10): spots, bases, spots_with_mates, avgLength, size_MB, InsertSize, I...\nlgl   (9): g1k_pop_code, source, g1k_analysis_group, Sex, Disease, Affection...\ndttm  (2): ReleaseDate, LoadDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nsra_metadata_db &lt;- sra_metadata %&gt;% janitor::clean_names() %&gt;%  # para limpiar y estandarizar los nombres de columnas de un data frame\n  select(run, library_strategy, library_selection, library_source, platform, model, bio_project, bio_sample, scientific_name) %&gt;%\n  # renombrar columnas\n  rename(accession = run, scientific_name_complete = scientific_name)\n# Rows: 11510 Columns: 47── Column specification\n\n# Reduce name\n# Quedarme con las primeras dos palabras\nsra_metadata_db$scientific_name_NCBI &lt;- word(sra_metadata_db$scientific_name_complete, 1, 2)\n\n# &gt; Antibiogram\nantibiograms_metadata &lt;- read_tsv(here(\"metadata\", \"antibiograms.tsv.gz\")) \n\n\nRows: 1404850 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (13): biosample, species, antibiotic, phenotype, measurement_sign, measu...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nantibiograms_db &lt;- antibiograms_metadata %&gt;% janitor::clean_names() %&gt;%  # Renombrar datos\n  rename(accession = reads, scientific_name_Antibiogram = species)\n\n\nDistribution of SRA IDs\n\n\nCode\n# Count unique accessions per species in the training metadata\ntrain_counts &lt;- training_metadata_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(train_num_accessions = n_distinct(accession))\n\n# Count unique accessions per species in the testing metadata\ntest_counts &lt;- test_metadata_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(test_num_accessions = n_distinct(accession))\n\n# Combine the counts by species, keeping all species present in the training set\ncombined_counts &lt;- train_counts %&gt;%\n  left_join(test_counts, by = \"scientific_name_CAMDA\") %&gt;%\n  # Replace NA in testing counts with 0 for species not present in the testing data\n  mutate(test_num_accessions = ifelse(is.na(test_num_accessions), 0, test_num_accessions))\n\n# Display the combined counts table\ncombined_counts\n\n\n# A tibble: 9 × 3\n  scientific_name_CAMDA    train_num_accessions test_num_accessions\n  &lt;chr&gt;                                   &lt;int&gt;               &lt;int&gt;\n1 Acinetobacter baumannii                   488                 597\n2 Campylobacter jejuni                      537                 410\n3 Escherichia coli                          512                 510\n4 Klebsiella pneumoniae                     791                 700\n5 Neisseria gonorrhoeae                     741                 679\n6 Pseudomonas aeruginosa                    571                 548\n7 Salmonella enterica                       640                 700\n8 Staphylococcus aureus                     571                 597\n9 Streptococcus pneumoniae                  607                 604\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThese tables may contain duplicates and incorrect annotations in the species names.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#step-2.-cleaning-metadata-information",
    "href": "2_Preprocessing_CAMDApublicdata.html#step-2.-cleaning-metadata-information",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.3 STEP 2. Cleaning metadata information",
    "text": "2.3 STEP 2. Cleaning metadata information\nThe information for the SRA IDs in the test and training datasets was verified:\n\nSRA IDs found in both test and training sets were removed from the test set, keeping them only in the training set.\nDuplicate SRA IDs in the rows of the training dataset were removed.\n\n\n2.3.1 Exclude overlapping SRA IDs from the test set, retaining them only in the training set\n\n\nCode\n# Obtener los IDs que están en ambos dataframes\nsraids_overlapping &lt;- intersect(test_metadata_db$accession, training_metadata_db$accession)\n\n# Mostrar los IDs comunes\nlength(sraids_overlapping)\n\n\n[1] 1290\n\n\nWe detected that 1,290 SRA IDs are shared between both files.\n\n\n2.3.2 Remove the test IDs that are shared with the training set\n\n\nCode\ntesting_metadata_cleaned &lt;- test_metadata_db %&gt;% filter(!(accession %in% training_metadata_db$accession))\n\n# 4055 SRA IDs accessions by row\nnrow(testing_metadata_cleaned) \n\n\n[1] 4055\n\n\nCode\n# check: length(unique(testing_metadata_cleaned$accession))\n\n\nSave file:\n\n\nCode\n# Create new folder\n#dir.create(\"../rawdata/TrainAndTest_cleaned\")\nwrite_tsv(testing_metadata_cleaned, file = here(\"rawdata/TrainAndTest_cleaned\", \"testing_metadata_cleaned.tsv\"), quote = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#step-3.-filter-out-from-the-testing-data-the-ids-present-in-the-training-set",
    "href": "2_Preprocessing_CAMDApublicdata.html#step-3.-filter-out-from-the-testing-data-the-ids-present-in-the-training-set",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.4 STEP 3. Filter out from the testing data the IDs present in the training set",
    "text": "2.4 STEP 3. Filter out from the testing data the IDs present in the training set\n\n2.4.1 How many SRA IDs are duplicated within the training set?\n\n\nCode\n# How many unique that we have?\ncat(\"Number of SRA ID unique (accessions)\", length(unique(training_metadata$accession)), sep = \" \") # 5458 SRA ID uniqued\n\n\nNumber of SRA ID unique (accessions) 5458\n\n\nCode\n# Numero de SRA IDs que se repiten varias veces?\ntraining_metadata_duplicated  &lt;- table(training_metadata$accession)\nsum(training_metadata_duplicated &gt; 1) # 502 SRA IDs\n\n\n[1] 502\n\n\nCode\n# How many duplicated that we have?\ntraining_duplicated_table &lt;- training_metadata %&gt;%\n  group_by(accession) %&gt;%\n  filter(n() &gt; 1) %&gt;%   # filtra accession con más de una ocurrencia\n  summarise(duplicados = n()) %&gt;%\n  arrange(desc(duplicados))\n\n# Only IDs (502 SRA IDs)\ntraining_SRAIDs_duplicated &lt;- training_duplicated_table$accession\n\n# Obtain duplicated names\ntraining_duplicated_db &lt;- training_metadata %&gt;% \n  filter(accession %in% training_SRAIDs_duplicated)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#check-do-we-have-the-same-species",
    "href": "2_Preprocessing_CAMDApublicdata.html#check-do-we-have-the-same-species",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.5 Check: Do we have the same species?",
    "text": "2.5 Check: Do we have the same species?\n\n2.5.1 Training vs public data\n\n\nCode\nintersect(training_metadata_db$scientific_name_CAMDA, sra_metadata_db$scientific_name_NCBI)\n\n\n[1] \"Neisseria gonorrhoeae\"    \"Staphylococcus aureus\"   \n[3] \"Escherichia coli\"         \"Campylobacter jejuni\"    \n[5] \"Acinetobacter baumannii\"  \"Streptococcus pneumoniae\"\n[7] \"Klebsiella pneumoniae\"    \"Salmonella enterica\"     \n[9] \"Pseudomonas aeruginosa\"  \n\n\n\n\n2.5.2 Test vs public data\n\n\nCode\nintersect(testing_metadata_cleaned$scientific_name_CAMDA, sra_metadata_db$scientific_name_NCBI)\n\n\n[1] \"Klebsiella pneumoniae\"    \"Neisseria gonorrhoeae\"   \n[3] \"Escherichia coli\"         \"Salmonella enterica\"     \n[5] \"Staphylococcus aureus\"    \"Pseudomonas aeruginosa\"  \n[7] \"Acinetobacter baumannii\"  \"Streptococcus pneumoniae\"\n[9] \"Campylobacter jejuni\"",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#step-4.-comparing-the-information-of-specie-and-accession-sra-id",
    "href": "2_Preprocessing_CAMDApublicdata.html#step-4.-comparing-the-information-of-specie-and-accession-sra-id",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.6 STEP 4. Comparing the information of Specie and accession (SRA ID)",
    "text": "2.6 STEP 4. Comparing the information of Specie and accession (SRA ID)\nLoad function\n\n\nCode\nsource(\"functions/compare_sp_function.R\")\n\n\nThe resulting dataset includes two status columns: status and status_reference:\n\nstatus indicates how the species annotation from the CAMDA dataset compares to external sources:\n\nMatched_NCBI_Antibiogram: CAMDA matches both NCBI and antibiogram data.\nMatched_NCBI: CAMDA matches only NCBI data.\nMatched_Antibiogram: CAMDA matches only the antibiogram data.\nMissing_All: No sufficient external data available for comparison.\n\nstatus_reference evaluates the consistency between the two external sources (NCBI and antibiogram):\n\nGood_sources: NCBI and antibiogram annotations agree with each other.\nVerify_sources: NCBI and antibiogram annotations disagree and require further manual verification to ensure data reliability.\n\n\nWhen the species annotations provided by NCBI and the antibiogram metadata do not match, it raises concerns about the accuracy of the sample’s taxonomic identity. Such discrepancies may indicate mislabeling, contamination, or outdated records. Therefore, it is essential to verify the original sources to ensure the reliability of downstream analyses.\n\n2.6.1 Training vs public data\n\n2.6.1.1 Check species name matches between CAMDA and NCBI\nFind how many species have matching names between CAMDA and NCBI to identify correctly annotated entries.\n\n\nCode\ntraining_completeInfo_db &lt;- compare_sp(training_metadata_db, sra_metadata_db, antibiograms_db)\n\n# Global information\ntraining_completeInfo_db %&gt;%  \n  # Visualizar informacion en una tabla bonita\n  DT::datatable()\n\n\n\n\n\n\nSave data\n\n\nCode\nwrite_tsv(training_completeInfo_db, file = here(\"rawdata/TrainAndTest_cleaned\", \"Training_allstatus_sp_reference_metadata.tsv.gz\"), quote = \"none\")\n\n\n\n\n2.6.1.2 How many SRA entries are correctly annotated and how many are not?\n\n\nCode\n# Global \ntable(training_completeInfo_db$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     359                      922                     3892 \n     Mismatch_with_CAMDA              Missing_All \n                       3                      263",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#about-missing-data",
    "href": "2_Preprocessing_CAMDApublicdata.html#about-missing-data",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.7 About missing data",
    "text": "2.7 About missing data\n\n\nCode\ntraining_completeInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(\n    total_samples = n(),\n    n_missing_data = sum(status == \"Missing_All\"),\n    pct_missing_data = (n_missing_data / total_samples) * 100) %&gt;%\n  arrange(desc(n_missing_data)) %&gt;%\n# Change NA by Zero\n mutate(across(everything(), ~replace_na(., 0)))\n\n\n# A tibble: 9 × 4\n  scientific_name_CAMDA    total_samples n_missing_data pct_missing_data\n  &lt;chr&gt;                            &lt;int&gt;          &lt;int&gt;            &lt;dbl&gt;\n1 Neisseria gonorrhoeae              741            127           17.1  \n2 Campylobacter jejuni               537             37            6.89 \n3 Escherichia coli                   512             35            6.84 \n4 Streptococcus pneumoniae           607             33            5.44 \n5 Staphylococcus aureus              571             19            3.33 \n6 Klebsiella pneumoniae              791              9            1.14 \n7 Pseudomonas aeruginosa             571              2            0.350\n8 Acinetobacter baumannii            488              0            0    \n9 Salmonella enterica                640              0            0    \n\n\n\n\n\n\n\n\nImportant\n\n\n\n7 out of 9 species have missing or incorrect data.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#verify-information-sources",
    "href": "2_Preprocessing_CAMDApublicdata.html#verify-information-sources",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.8 Verify information sources",
    "text": "2.8 Verify information sources\nThe data from NCBI does not match the information available in the antibiogram records.\n\n\nCode\ntraining_verify_data &lt;- training_completeInfo_db %&gt;%\n  filter(status_reference == \"Verify_sources\") \n\n\n\n\nCode\ntable(training_completeInfo_db$status_reference)\n\n\n\n  Good_sources     No_sources Verify_sources \n          3892            263           1303",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#test-vs-public-data-1",
    "href": "2_Preprocessing_CAMDApublicdata.html#test-vs-public-data-1",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.9 Test vs public data",
    "text": "2.9 Test vs public data\n\n2.9.0.1 Check species name matches between CAMDA and NCBI\n\n\nCode\ntest_completeInfo_db &lt;- compare_sp(testing_metadata_cleaned, sra_metadata_db, antibiograms_db)\n\n# Join information\ntest_db_cleaned &lt;- testing_metadata_cleaned %&gt;%\n  left_join(select(test_completeInfo_db, -scientific_name_CAMDA), by = \"accession\")\n\n# Global information\ntest_db_cleaned %&gt;%  \n  # Visualizar informacion en una tabla bonita\n  DT::datatable()\n\n\n\n\n\n\nSave data\n\n\nCode\nwrite_tsv(test_db_cleaned, file = here(\"rawdata/TrainAndTest_cleaned\", \"Test_allstatus_sp_reference_metadata.tsv.gz\"), quote = \"none\")\n\n\n\n\n2.9.0.2 How many SRA entries are correctly annotated and how many are not?\n\n\nCode\n# Global \ntable(test_completeInfo_db$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     359                      922                     3892 \n     Mismatch_with_CAMDA              Missing_All \n                       3                      263 \n\n\n\n\n2.9.0.3 Checar las fuentes\n\n\nCode\ntest_verify_data &lt;- test_completeInfo_db %&gt;%\n  filter(status_reference == \"Verify_sources\") \n\n\n\n\nCode\ntable(test_completeInfo_db$status_reference)\n\n\n\n  Good_sources     No_sources Verify_sources \n          3892            263           1303",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "2_Preprocessing_CAMDApublicdata.html#step-5-reetiquetas-muestras-y-eliminar-especies-mal-anotadas",
    "href": "2_Preprocessing_CAMDApublicdata.html#step-5-reetiquetas-muestras-y-eliminar-especies-mal-anotadas",
    "title": "2  Comparing CAMDA metadata related with public data",
    "section": "2.10 STEP 5: Reetiquetas muestras y eliminar especies mal anotadas",
    "text": "2.10 STEP 5: Reetiquetas muestras y eliminar especies mal anotadas\nIdentify SRA IDs with inconsistent annotations that require verification\n\n\nCode\nSRA_IDs_rare_db &lt;- training_completeInfo_db %&gt;%\n  # Keep only entries where external sources (NCBI and/or antibiogram) do not fully agree\n  filter(status_reference == \"Verify_sources\") %&gt;%\n  # Ensure the NCBI scientific name is available\n  filter(!is.na(scientific_name_NCBI)) %&gt;%\n  # Exclude entries that already match the NCBI annotation\n  filter(status != \"Matched_NCBI\")\n\nSRA_IDs_rare_db\n\n\n# A tibble: 8 × 6\n  accession  scientific_name_CAMDA  scientific_name_NCBI  scientific_name_Anti…¹\n  &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;                 &lt;chr&gt;                 \n1 SRR2101499 Staphylococcus aureus  Mycobacterium tuberc… Staphylococcus aureus \n2 ERR1218638 Escherichia coli       Klebsiella pneumoniae Escherichia coli      \n3 ERR1218722 Escherichia coli       Klebsiella pneumoniae Escherichia coli      \n4 SRR960879  Klebsiella pneumoniae  Klebsiella quasipneu… &lt;NA&gt;                  \n5 SRR850995  Klebsiella pneumoniae  Klebsiella variicola  &lt;NA&gt;                  \n6 ERR1218771 Klebsiella pneumoniae  Klebsiella quasipneu… Klebsiella pneumoniae \n7 SRR5386043 Klebsiella pneumoniae  Klebsiella quasivari… Klebsiella pneumoniae \n8 SRR6985679 Pseudomonas aeruginosa Pseudomonas paraerug… &lt;NA&gt;                  \n# ℹ abbreviated name: ¹​scientific_name_Antibiogram\n# ℹ 2 more variables: status &lt;chr&gt;, status_reference &lt;chr&gt;\n\n\nAdditionally, SRA IDs ERR1218638 and ERR1218722 will be reassigned to Klebsiella pneumoniae, a species included in the study. These samples were previously annotated in the CAMDA dataset as Escherichia coli.\n\n\nCode\nSRA_IDs_edited &lt;- SRA_IDs_rare_db %&gt;%\n  # Si alguno de los nombre reales encontrados en NCBI puede ser util para renombrarlo\n  filter(scientific_name_NCBI %in% unique(training_completeInfo_db$scientific_name_CAMDA))\n\n# Quedarme con solo los IDs\nSRA_IDs_edited &lt;- SRA_IDs_edited$accession\n\n\nBased on the information obtained from public datasets, we have decided to remove SRA IDs “SRR2101499”, “SRR960879”, “SRR850995”, “ERR1218771”, “SRR5386043” and “SRR6985679”, as they correspond to species that are not relevant or appropriate for the scope of this study and are considered sources of noise in the identification of antimicrobial resistance genes.\n\n\nCode\nSRA_IDs_removed &lt;- SRA_IDs_rare_db %&gt;%\n  # IDs que no se encuentran en NCBI y que estan mal, nos meten ruido\n  filter(!(scientific_name_NCBI %in% unique(training_completeInfo_db$scientific_name_CAMDA)))\n\n# Quedarme con solo los IDs\nSRA_IDs_removed &lt;- SRA_IDs_removed$accession\n\n# Join\nSRA_IDs_allremoved &lt;- c(SRA_IDs_edited, SRA_IDs_removed)\n\n\nRemove inconsistent entries and clean the data\n\n\nCode\ntraining_cleanedInfo_db &lt;- training_completeInfo_db %&gt;%\n  # Eliminar Missing data (282 SRa IDs)\n  # filter(status != \"Missing_All\") %&gt;%\n  # Elimianr especies mal anotadas (6 SRA IDs)\n  filter(!(accession %in% SRA_IDs_allremoved)) # %&gt;%\n  # Renombrar especies mal anotadas\n  #mutate(scientific_name_CAMDA = case_when(\n  #  accession %in% SRA_IDs_edited ~ \"Klebsiella pneumoniae\",\n  #  TRUE ~ scientific_name_CAMDA  # o cualquier columna base\n  #))\n\n# Join information\ntraining_db_cleaned &lt;- training_cleanedInfo_db %&gt;%\n  left_join(select(training_metadata_db, -scientific_name_CAMDA), by = \"accession\") %&gt;%\n  # Order columns\n  select(genus, species, accession, phenotype:collection_date, scientific_name_CAMDA:status_reference) %&gt;%\n  # Remove duplicates (only rows)\n  distinct()\n\n\n\n\nCode\ntable(training_db_cleaned$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     361                     1008                     4024 \n             Missing_All \n                     309 \n\n\nSave data\n\n\nCode\nwrite_tsv(training_db_cleaned, file = here(\"rawdata/TrainAndTest_cleaned\", \"training_metadata_cleaned.tsv\"), quote = \"none\")\n\n\nVerify the total number of SRA IDs.\n\n\nCode\n# Count unique accessions per species in the training metadata\ntrain_counts_cleaned &lt;- training_cleanedInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(trainClean_num_accessions = n_distinct(accession))\n\n# Count unique accessions per species in the testing metadata\ntest_counts_cleaned &lt;- test_completeInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(testClean_num_accessions = n_distinct(accession))\n\n# Combine the counts by species, keeping all species present in the training set\ncombined_counts_completed &lt;- combined_counts %&gt;%\n  left_join(train_counts_cleaned, by = \"scientific_name_CAMDA\") %&gt;%\n  left_join(test_counts_cleaned, by = \"scientific_name_CAMDA\") \n\n# sum columns\ndf_total &lt;- combined_counts_completed %&gt;%\n  summarise(across(where(is.numeric), ~sum(.x, na.rm = TRUE))) %&gt;%\n  mutate(rowname = \"Total\") %&gt;%\n  select(rowname, everything())\n\ncombined_counts_completed &lt;- combined_counts_completed %&gt;%\n  mutate(rowname = rownames(.)) %&gt;%\n  select(rowname, everything()) %&gt;%\n  bind_rows(df_total)\n\n# Display the combined counts table\ncombined_counts_completed %&gt;% \n  select(-rowname) %&gt;%\n  DT::datatable()\n\n\n\n\n\n\nSave\n\n\nCode\nsave(antibiograms_db, test_db_cleaned, training_db_cleaned, sra_metadata_db, test_completeInfo_db, training_cleanedInfo_db,  file = here(\"rawdata/TrainAndTest_cleaned\", \"complete_metadata.RData\"))",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with public data</span>"
    ]
  },
  {
    "objectID": "3_Download_SRAdata.html",
    "href": "3_Download_SRAdata.html",
    "title": "3  Verificar los datos descargados",
    "section": "",
    "text": "3.1 To do list\nCrear archivo solo de los datos que se encuentren descargados\nLo descargue en mi computadora dentro de la carpeta donde se respalda Github.\nLoad packages\nCode\nlibrary(tidyverse)\nlibrary(DT)        # Tablas bonitas\nlibrary(here)\nImport Data\nCode\n# Load metadata cleaned and antibiogram information\nload(here(\"rawdata/TrainAndTest_cleaned\", \"complete_metadata.RData\"))\n\n# Load information about download rawdata, import as data.frame\nSRA_down &lt;- read.table(here(\"quality_rawdata\", \"SRA_names_carpetas.txt\"), header = FALSE, col.names = \"accession\")\nClasificacion de los datos descargados\nCode\n# Combina los datos de test y training en un solo data frame con una columna fuente\ninfo_combined &lt;- bind_rows(\n  test_completeInfo_db %&gt;% mutate(info = \"Test_data\"),\n  training_cleanedInfo_db %&gt;% mutate(info = \"Training_data\")) %&gt;%\n  select(accession, scientific_name_CAMDA, info)\n\n# Une con SRA_down y asigna 'missing' si no hay coincidencias\nSRA_down_joined_data &lt;- SRA_down %&gt;%\n  full_join(info_combined, by = \"accession\") %&gt;%\n  mutate(info = if_else(accession %in% SRA_down$accession, paste0(info,\"_download\") , paste0(info,\"_missing\")))\n\ntable(SRA_down_joined_data$info)\n\n\n\n           NA_download     Test_data_download      Test_data_missing \n                  2150                   3216                   2242 \nTraining_data_download  Training_data_missing \n                  3212                   2238\nDe que especies ya tenemos informacion\nCode\nSRA_down_joined_data %&gt;%\n  group_by(scientific_name_CAMDA, info) %&gt;%\n  summarise(n_accession = n_distinct(accession)) %&gt;%\n  arrange(desc(n_accession))  %&gt;%\n  DT::datatable()\n\n\n`summarise()` has grouped output by 'scientific_name_CAMDA'. You can override\nusing the `.groups` argument.\nAcomodar los datos descargados\nCode\nkpeun_ids &lt;- SRA_down_joined_data %&gt;%\n  filter(info == \"Training_data_download\") %&gt;%\n  filter(scientific_name_CAMDA == \"Klebsiella pneumoniae\")\nkpeun_ids &lt;- kpeun_ids$accession",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Verificar los datos descargados</span>"
    ]
  },
  {
    "objectID": "3_Download_SRAdata.html#to-do-list",
    "href": "3_Download_SRAdata.html#to-do-list",
    "title": "3  Verificar los datos descargados",
    "section": "",
    "text": "Checar cuanto porcentage de descarga tenemos de los datos\nMover a sus respectivas carpetas por especies\nOrden de las carpetas, clasificar por Herramienta/equipo de secuenciacion (Illumina, PacBio, Nanopore), Tamaños de los reads, Tipos de bibliotecas (PE/SE)\nMover los FastQC a sus respectivas carpeta y correr MultiQC",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Verificar los datos descargados</span>"
    ]
  },
  {
    "objectID": "3_Download_SRAdata.html#acomodo-de-las-carpetas-por-especie",
    "href": "3_Download_SRAdata.html#acomodo-de-las-carpetas-por-especie",
    "title": "3  Verificar los datos descargados",
    "section": "3.2 Acomodo de las carpetas por especie",
    "text": "3.2 Acomodo de las carpetas por especie\nEsperaria contar con 9 carpetas, unas por cada especie, ademas de tener subcarpetas relacionadas con el equipo de secuenciacion (Illumina, Nanopore, PacBio), tipo de bibliotecas (paired-end, single-end), asi como de los tamaños de los reads. Viendose algo como eso:\n/raw_data/\n├── Especie_1/\n│   ├── illumina/\n│   │   ├── paired_end/\n│   │   └── single_end/\n│   ├── pacbio/\n│   │   └── single_end/\n│   └── nanopore/\n│       └── single_end/\n├── Especie_2/\n│   ├── illumina/\n│   │   ├── paired_end/\n│   │   └── single_end/\n│   ├── pacbio/\n│   │   └── single_end/\n│   └── nanopore/\n│       └── single_end/\n...\n└── Especie_9/\n    ├── illumina/\n    │   ├── paired_end/\n    │   └── single_end/\n    ├── pacbio/\n    │   └── single_end/\n    └── nanopore/\n        └── single_end/\nInformación sobre los tipos de bibliotecas:\n\nPAIRED: indica que es una secuenciación por pares (paired-end), es decir, se han secuenciado ambos extremos de un fragmento de ADN.\nSINGLE: significa que las lecturas son de un solo extremo (single-end), es decir, se secuencia solo un extremo de cada fragmento de ADN.\n\nInformación sobrelas tecnologias de secuenciacion:\n\nLS454: se refiere a la tecnología de secuenciación Roche/454 Life Sciences, una de las primeras plataformas de secuenciación masiva (ya descontinuada).\nPACBIO_SMRT: se refiere a la tecnología de Pacific Biosciences (PacBio) usando su plataforma SMRT (Single Molecule Real-Time) sequencing.\nILLUMINA: Tecnología de secuenciación de segunda generación, que es la plataforma más común y extendida para NGS. Produce lecturas cortas (100-300 pb típicamente) con alta precisión y gran volumen.\nOXFORD_NANOPORE: Plataforma de secuenciación desarrollada por Oxford Nanopore Technologies, que produce lecturas muy largas en tiempo real mediante la detección de cambios en corriente eléctrica cuando el ADN pasa por un poro nanopore.\n\n\n3.2.1 Test information\nVamos a revisar que tipos de datos esperamos tener de las secuenciaciones para generar las carpetas relacionadas\n\n\nCode\n# 1. Expandir accession IDs en antibiograms_db\nantibiograms_expanded &lt;- antibiograms_db %&gt;%\n  separate_rows(accession, read_type, sep = \" \")  # cambia el separador si es coma por row\n\n# 2. Unir con test_completeInfo_db por accession\ntest_joined_data &lt;- test_completeInfo_db %&gt;%\n  left_join(antibiograms_expanded %&gt;% select(accession, read_type),\n            by = \"accession\")\n\n# 3. Resultado\ntable(test_joined_data$read_type)\n\n\n\n       PAIRED_ILLUMINA           PAIRED_LS454     PAIRED_PACBIO_SMRT \n                 70121                    228                    457 \n       SINGLE_ILLUMINA           SINGLE_LS454 SINGLE_OXFORD_NANOPORE \n                    27                    329                     14 \n    SINGLE_PACBIO_SMRT \n                  1935 \n\n\nDistribucion por especies y tecnologias de secuenciacion\n\n\nCode\ntest_joined_data %&gt;%\n  group_by(scientific_name_CAMDA, read_type) %&gt;%\n  summarise(n_accession = n_distinct(accession)) %&gt;%\n  arrange(desc(n_accession))  %&gt;%\n  DT::datatable()\n\n\n`summarise()` has grouped output by 'scientific_name_CAMDA'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n3.2.2 Training information\nVamos a revisar que tipos de datos esperamos tener de las secuenciaciones para generar las carpetas relacionadas\n\n\nCode\n# 2. Unir con training_cleanedInfo_db por accession\ntraining_joined_data &lt;- training_cleanedInfo_db %&gt;%\n  left_join(antibiograms_expanded %&gt;% select(accession, read_type),\n            by = \"accession\")\n\n# 3. Resultado\ntable(training_joined_data$read_type)\n\n\n\n       PAIRED_ILLUMINA           PAIRED_LS454     PAIRED_PACBIO_SMRT \n                 70018                    228                    457 \n       SINGLE_ILLUMINA           SINGLE_LS454 SINGLE_OXFORD_NANOPORE \n                    27                    329                     14 \n    SINGLE_PACBIO_SMRT \n                  1920 \n\n\nDistribucion por especies y tecnologias de secuenciacion\n\n\nCode\ntraining_joined_data %&gt;%\n  group_by(scientific_name_CAMDA, read_type) %&gt;%\n  summarise(n_accession = n_distinct(accession)) %&gt;%\n  arrange(desc(n_accession))  %&gt;%\n  DT::datatable()\n\n\n`summarise()` has grouped output by 'scientific_name_CAMDA'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n3.2.3 SRA de las especies\nCargar funcion\n\n\nCode\n# Separar la s especies en variables individuales especie_ids\nsource(\"functions/create_species_function.R\")\n# Funcion que genera archivos txt de solo SRA \nsource(\"functions/Save_ids_files.R\")\n\n\nExtraer una variable por especie\n\n\nCode\n# Generar una variable por especie\ncreate_species_variables(SRA_down_joined_data, \"scientific_name_CAMDA\")\n\n# IDs de las especies descargadas \nsave_ids(ngonorrhoeae_ids, \"ngonorrhoeae\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para ngonorrhoeae\n\n\nCode\nsave_ids(abaumannii_ids, \"abaumannii\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para abaumannii\n\n\nCode\nsave_ids(cjejuni_ids, \"cjejuni\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para cjejuni\n\n\nCode\nsave_ids(ecoli_ids, \"ecoli\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para ecoli\n\n\nCode\nsave_ids(kpneumoniae_ids, \"kpneumoniae\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para kpneumoniae\n\n\nCode\nsave_ids(paeruginosa_ids, \"paeruginosa\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para paeruginosa\n\n\nCode\nsave_ids(saureus_ids, \"saureus\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para saureus\n\n\nCode\nsave_ids(senterica_ids, \"senterica\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para senterica\n\n\nCode\nsave_ids(spneumoniae_ids, \"spneumoniae\", ruta_salida = \"quality_rawdata/species_ids_carpetas\")\n\n\nArchivos guardados para spneumoniae\n\n\nSubir los archivos en el cluster\nscp scripts/move_ids.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts\n# Script: Crear symlinks de los rawdata (raw/) y almacenarlo por especies en rawspecies/\nscp scripts/links_rawdata_byspecies.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts\n# Script: Crear symlinks de los fastqc (quality/fastqc/) y almacenarlo por especies en quality_byspecies/\nscp scripts/links_fastqc_byspecies.sh ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts\nSubir la carpeta con los IDs\nscp -v -r quality_rawdata/species_ids_carpetas ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/scripts\nCargar funcion y crear symlinks de los rawdata\n# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads\n# cargar funcion\nsource scripts/move_ids.sh # no tengo permisos\nsource scripts/links_rawdata_byspecies.sh\n\n# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads\nlink_ids scripts/species_ids_carpetas/abaumannii_test_ids.txt test abaumannii\nlink_ids scripts/species_ids_carpetas/abaumannii_training_ids.txt training abaumannii\n#\nlink_ids scripts/species_ids_carpetas/cjejuni_test_ids.txt test cjejuni\nlink_ids scripts/species_ids_carpetas/cjejuni_training_ids.txt training cjejuni\n#\nlink_ids scripts/species_ids_carpetas/ecoli_test_ids.txt test ecoli\nlink_ids scripts/species_ids_carpetas/ecoli_training_ids.txt training ecoli\n#\n# link_ids scripts/species_ids_carpetas/kpneumoniae_test_ids.txt test kpneumoniae\nlink_ids scripts/species_ids_carpetas/kpneumoniae_training_ids.txt training kpneumoniae\n#\nlink_ids scripts/species_ids_carpetas/ngonorrhoeae_test_ids.txt test ngonorrhoeae\nlink_ids scripts/species_ids_carpetas/ngonorrhoeae_training_ids.txt training ngonorrhoeae\n#\nlink_ids scripts/species_ids_carpetas/paeruginosa_test_ids.txt test paeruginosa\nlink_ids scripts/species_ids_carpetas/paeruginosa_training_ids.txt training paeruginosa\n#\nlink_ids scripts/species_ids_carpetas/saureus_test_ids.txt test saureus\nlink_ids scripts/species_ids_carpetas/saureus_training_ids.txt training saureus\n#\nlink_ids scripts/species_ids_carpetas/senterica_test_ids.txt test senterica\nlink_ids scripts/species_ids_carpetas/senterica_training_ids.txt training senterica\n#\nlink_ids scripts/species_ids_carpetas/spneumoniae_test_ids.txt test spneumoniae\nlink_ids scripts/species_ids_carpetas/spneumoniae_training_ids.txt training spneumoniae\nInformacion de las carpetas contenidas:\nls -la raw_byspecies/*\nraw_byspecies/abaumannii:\ntotal 28\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:04 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio  4096 jun 25 23:03 test\ndrwxr-xr-x  2 ecoss bio 16384 jun 25 23:04 training\n\nraw_byspecies/cjejuni:\ntotal 52\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:04 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 16384 jun 25 23:04 test\ndrwxr-xr-x  2 ecoss bio 24576 jun 25 23:04 training\n\nraw_byspecies/ecoli:\ntotal 48\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 20480 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 20480 jun 25 23:05 training\n\nraw_byspecies/kpneumoniae:\ntotal 12\ndrwxr-xr-x  3 ecoss bio 4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training\n\nraw_byspecies/ngonorrhoeae:\ntotal 48\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio  4096 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 32768 jun 25 23:05 training\n\nraw_byspecies/paeruginosa:\ntotal 16\ndrwxr-xr-x  4 ecoss bio 4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training\n\nraw_byspecies/saureus:\ntotal 64\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 24576 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 24576 jun 25 23:05 training\n\nraw_byspecies/senterica:\ntotal 16\ndrwxr-xr-x  4 ecoss bio 4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio 4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 4096 jun 25 23:05 training\n\nraw_byspecies/spneumoniae:\ntotal 40\ndrwxr-xr-x  4 ecoss bio  4096 jun 25 23:05 .\ndrwxr-xr-x 11 ecoss bio  4096 jun 25 23:05 ..\ndrwxr-xr-x  2 ecoss bio 16384 jun 25 23:05 test\ndrwxr-xr-x  2 ecoss bio 16384 jun 25 23:05 training\nCargar funcion y crear symlink de los fastqc por especies\n# ecoss@elisa:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads\n# cargar funcion\nsource scripts/links_fastqc_byspecies.sh\n\n# &gt; abaumannii\nlink_fastqc_by_species scripts/species_ids_carpetas/abaumannii_test_ids.txt test abaumannii # sin reportes\nlink_fastqc_by_species scripts/species_ids_carpetas/abaumannii_training_ids.txt training abaumannii\n\n# correr multiqc\nmultiqc quality_byspecies/abaumannii/training -n multiqc_abaumannii_training.html -o quality_byspecies/multiqc_report\n\n# /// MultiQC 🔍 v1.29\n# \n#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/abaumannii/training\n#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1264/1264  \n#             fastqc | Found 632 reports\n#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_abaumannii_training_data\n#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_abaumannii_training.html\n#            multiqc | MultiQC complete\n\n# &gt; cjejuni\nlink_fastqc_by_species scripts/species_ids_carpetas/cjejuni_test_ids.txt test cjejuni # sin reportes link_fastqc_by_species scripts/species_ids_carpetas/cjejuni_training_ids.txt training cjejuni\n\n# correr multiqc\nmultiqc quality_byspecies/cjejuni/training -n multiqc_cjejuni_training.html -o quality_byspecies/multiqc_report\n\n# /// MultiQC 🔍 v1.29\n# \n#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/cjejuni/training\n#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2132/2132  \n#             fastqc | Found 1066 reports\n#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_cjejuni_training_data\n#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_cjejuni_training.html\n#            multiqc | MultiQC complete\n\n# &gt; ecoli\nlink_fastqc_by_species scripts/species_ids_carpetas/ecoli_test_ids.txt test ecoli\nlink_fastqc_by_species scripts/species_ids_carpetas/ecoli_training_ids.txt training ecoli\n\n# correr multiqc\nmultiqc quality_byspecies/ecoli/training -n multiqc_ecoli_training.html -o quality_byspecies/multiqc_report\n\n# /// MultiQC 🔍 v1.29\n# \n#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/ecoli/training\n#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1894/1894  \n#             fastqc | Found 947 reports\n#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_ecoli_training_data\n#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_ecoli_training.html\n#            multiqc | MultiQC complete\n\n\n# &gt; kpneumoniae - sin reporte en ambos\nlink_fastqc_by_species scripts/species_ids_carpetas/kpneumoniae_test_ids.txt test kpneumoniae\nlink_fastqc_by_species scripts/species_ids_carpetas/kpneumoniae_training_ids.txt training kpneumoniae\n\n# correr multiqc\nmultiqc quality_byspecies/kpneumoniae/training -n multiqc_kpneumoniae_training.html -o quality_byspecies/multiqc_report\n\n           \n# &gt; ngonorrhoeae\nlink_fastqc_by_species scripts/species_ids_carpetas/ngonorrhoeae_test_ids.txt test ngonorrhoeae\nlink_fastqc_by_species scripts/species_ids_carpetas/ngonorrhoeae_training_ids.txt training ngonorrhoeae\n\n# correr multiqc\nmultiqc quality_byspecies/ngonorrhoeae/training -n multiqc_ngonorrhoeae_training.html -o quality_byspecies/multiqc_report\n\n# /// MultiQC 🔍 v1.29\n# \n#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/ngonorrhoeae/training\n#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 2836/2836  \n#             fastqc | Found 1418 reports\n#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_ngonorrhoeae_training_data\n#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_ngonorrhoeae_training.html\n#            multiqc | MultiQC complete \n\n# &gt; Sin reporte de fastqc\nlink_fastqc_by_species scripts/species_ids_carpetas/paeruginosa_test_ids.txt test paeruginosa\nlink_fastqc_by_species scripts/species_ids_carpetas/paeruginosa_training_ids.txt training paeruginosa\n\n# correr multiqc\nmultiqc quality_byspecies/paeruginosa/training -n multiqc_paeruginosa_training.html -o quality_byspecies/multiqc_report\n\n# &gt; saureus\nlink_fastqc_by_species scripts/species_ids_carpetas/saureus_test_ids.txt test saureus\nlink_fastqc_by_species scripts/species_ids_carpetas/saureus_training_ids.txt training saureus\n\n# correr multiqc\nmultiqc quality_byspecies/saureus/training -n multiqc_saureus_training.html -o quality_byspecies/multiqc_report\n\n# /// MultiQC 🔍 v1.29\n# \n#        file_search | Search path: /files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/saureus/training\n#          searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 1796/1796  \n#             fastqc | Found 898 reports\n#      write_results | Data        : quality_byspecies/multiqc_report/multiqc_saureus_training_data\n#      write_results | Report      : quality_byspecies/multiqc_report/multiqc_saureus_training.html\n#            multiqc | MultiQC complete\n\n# &gt; senterica\nlink_fastqc_by_species scripts/species_ids_carpetas/senterica_test_ids.txt test senterica\nlink_fastqc_by_species scripts/species_ids_carpetas/senterica_training_ids.txt training senterica\n\n# correr multiqc\nmultiqc quality_byspecies/senterica/training -n multiqc_senterica_training.html -o quality_byspecies/multiqc_report\n\n# &gt; spneumoniae\nlink_fastqc_by_species scripts/species_ids_carpetas/spneumoniae_test_ids.txt test spneumoniae\nlink_fastqc_by_species scripts/species_ids_carpetas/spneumoniae_training_ids.txt training spneumoniae\n\n# correr multiqc\nmultiqc quality_byspecies/spneumoniae/training -n multiqc_spneumoniae_training.html -o quality_byspecies/multiqc_report\nDescargar archivos\n# /Users/ecoss/Documents/CAMDA2025_metadatos/quality_rawdata\nscp -r ecoss@elisa.matmor.unam.mx:/files/CAMDA2025_AntibioticResistance/genome_reassembly/reads/quality_byspecies/multiqc_report/*html .\n\none of the Staphylococcus aureus accession codes is incorrect, as follows: SRR2101499 should be ERR1197981 Bradley, et al. 2016. Nature\nDe acuerdo a ENA, este SRR2101499 corresponde a Mycobacterium tuberculosis.\n\nSRR1187837 y SRR1187838 - E.coli UCI 54\nSRR3982215 - E.coli\nSRR3996243",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Verificar los datos descargados</span>"
    ]
  },
  {
    "objectID": "3_Download_SRAdata.html#eliminacion-de-secuencias-de-mala-calidad-y-de-adaptadores",
    "href": "3_Download_SRAdata.html#eliminacion-de-secuencias-de-mala-calidad-y-de-adaptadores",
    "title": "3  Verificar los datos descargados",
    "section": "3.3 Eliminacion de secuencias de mala calidad y de adaptadores",
    "text": "3.3 Eliminacion de secuencias de mala calidad y de adaptadores\nTrim Galore! o Trimmomatic - Solo illumina\nFiltlong o NanoFilt - Oxford Nanopore / PacBio\nCutadapt o Prinseq-lite - SOLiD / Ion Torrent / 454",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Verificar los datos descargados</span>"
    ]
  },
  {
    "objectID": "4_Aligment.html",
    "href": "4_Aligment.html",
    "title": "4  Aligment",
    "section": "",
    "text": "To do list",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Aligment</span>"
    ]
  }
]
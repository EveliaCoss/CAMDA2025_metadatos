[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CAMDA2025 metadatos",
    "section": "",
    "text": "CAMDA 2025\nAnalisis de los metadatos proporcionados por CAMDA, tanto training dataset como de testing.",
    "crumbs": [
      "CAMDA 2025"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "",
    "text": "2.1 Load packages\nCode\nlibrary(tidyverse)\nlibrary(DT)        # Tablas bonitas\nlibrary(here)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#step-1.-import-metadata-and-change-format",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#step-1.-import-metadata-and-change-format",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.2 STEP 1. Import Metadata and change format",
    "text": "2.2 STEP 1. Import Metadata and change format\n\n\nCode\n# &gt; training dataset\ntraining_metadata &lt;- read_csv(here(\"rawdata/TrainAndTest_dataset\",  \"training_dataset.csv\"))\n\n\nRows: 6144 Columns: 16\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (15): genus, species, accession, phenotype, antibiotic, measurement_sign...\ndbl  (1): measurement_value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# rename species\ntraining_metadata_db &lt;- training_metadata %&gt;%\n  mutate(scientific_name_CAMDA = paste(genus, species, sep = \" \")) \n# Rows: 6144 Columns: 16── Column\n\n# &gt; test dataset\ntest_metadata &lt;- read_csv(here(\"rawdata/TrainAndTest_dataset\",  \"testing_template.csv\"))\n\n\nRows: 5345 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): genus, species, accession, phenotype, antibiotic, measurement_value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# rename species\ntest_metadata_db &lt;- test_metadata %&gt;%\n  mutate(scientific_name_CAMDA = paste(genus, species, sep = \" \")) \n# Rows: 5345 Columns: 6── Column\n\n# &gt; Load public metadata from NCBI\nsra_metadata &lt;- read_csv(here(\"metadata\", \"sra-metadata.csv\")) \n\n\nRows: 11510 Columns: 47\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (26): Run, AssemblyName, download_path, Experiment, LibraryName, Librar...\ndbl  (10): spots, bases, spots_with_mates, avgLength, size_MB, InsertSize, I...\nlgl   (9): g1k_pop_code, source, g1k_analysis_group, Sex, Disease, Affection...\ndttm  (2): ReleaseDate, LoadDate\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nsra_metadata_db &lt;- sra_metadata %&gt;% janitor::clean_names() %&gt;%  # para limpiar y estandarizar los nombres de columnas de un data frame\n  select(run, library_strategy, library_selection, library_source, platform, model, bio_project, bio_sample, scientific_name) %&gt;%\n  # renombrar columnas\n  rename(accession = run, scientific_name_complete = scientific_name)\n# Rows: 11510 Columns: 47── Column specification\n\n# Reduce name\n# Quedarme con las primeras dos palabras\nsra_metadata_db$scientific_name_NCBI &lt;- word(sra_metadata_db$scientific_name_complete, 1, 2)\n\n# &gt; Antibiogram\nantibiograms_metadata &lt;- read_tsv(here(\"metadata\", \"antibiograms.tsv.gz\")) \n\n\nRows: 1404850 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (13): biosample, species, antibiotic, phenotype, measurement_sign, measu...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nantibiograms_metadata_db &lt;- antibiograms_metadata %&gt;% janitor::clean_names() %&gt;%  # Renombrar datos\n  rename(accession = reads, scientific_name_Antibiogram = species)\n\n\nDistribution of SRA IDs\n\n\nCode\n# Count unique accessions per species in the training metadata\ntrain_counts &lt;- training_metadata_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(train_num_accessions = n_distinct(accession))\n\n# Count unique accessions per species in the testing metadata\ntest_counts &lt;- test_metadata_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(test_num_accessions = n_distinct(accession))\n\n# Combine the counts by species, keeping all species present in the training set\ncombined_counts &lt;- train_counts %&gt;%\n  left_join(test_counts, by = \"scientific_name_CAMDA\") %&gt;%\n  # Replace NA in testing counts with 0 for species not present in the testing data\n  mutate(test_num_accessions = ifelse(is.na(test_num_accessions), 0, test_num_accessions))\n\n# Display the combined counts table\ncombined_counts\n\n\n# A tibble: 9 × 3\n  scientific_name_CAMDA    train_num_accessions test_num_accessions\n  &lt;chr&gt;                                   &lt;int&gt;               &lt;int&gt;\n1 Acinetobacter baumannii                   488                 597\n2 Campylobacter jejuni                      537                 410\n3 Escherichia coli                          512                 510\n4 Klebsiella pneumoniae                     791                 700\n5 Neisseria gonorrhoeae                     741                 679\n6 Pseudomonas aeruginosa                    571                 548\n7 Salmonella enterica                       640                 700\n8 Staphylococcus aureus                     571                 597\n9 Streptococcus pneumoniae                  607                 604\n\n\n\n\n\n\n\n\nImportant\n\n\n\nThese tables may contain duplicates and incorrect annotations in the species names.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#step-2.-cleaning-metadata-information",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#step-2.-cleaning-metadata-information",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.3 STEP 2. Cleaning metadata information",
    "text": "2.3 STEP 2. Cleaning metadata information\nThe information for the SRA IDs in the test and training datasets was verified:\n\nSRA IDs found in both test and training sets were removed from the test set, keeping them only in the training set.\nDuplicate SRA IDs in the rows of the training dataset were removed.\nSRA IDs with all three phenotypes (S/I/R) were removed from the training dataset.\nRe-assignment of SRA IDs with duplicated annotations or conflicting annotations.\n\n\n2.3.1 Exclude overlapping SRA IDs from the test set, retaining them only in the training set\n\n\nCode\n# Obtener los IDs que están en ambos dataframes\nsraids_overlapping &lt;- intersect(test_metadata_db$accession, training_metadata_db$accession)\n\n# Mostrar los IDs comunes\nlength(sraids_overlapping)\n\n\n[1] 1290\n\n\nWe detected that 1,290 SRA IDs are shared between both files.\n\n\n2.3.2 Remove the test IDs that are shared with the training set\n\n\nCode\ntesting_metadata_cleaned &lt;- test_metadata_db %&gt;% filter(!(accession %in% training_metadata_db$accession))\n\n# 4055 SRA IDs accessions by row\nnrow(testing_metadata_cleaned) \n\n\n[1] 4055\n\n\nCode\n# check: length(unique(testing_metadata_cleaned$accession))\n\n\nSave file:\n\n\nCode\n# Create new folder\n#dir.create(\"../rawdata/TrainAndTest_cleaned\")\nwrite_tsv(testing_metadata_cleaned, file = here(\"rawdata/TrainAndTest_cleaned\", \"testing_metadata_cleaned.tsv\"), quote = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#step-3.-filter-out-from-the-testing-data-the-ids-present-in-the-training-set",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#step-3.-filter-out-from-the-testing-data-the-ids-present-in-the-training-set",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.4 STEP 3. Filter out from the testing data the IDs present in the training set",
    "text": "2.4 STEP 3. Filter out from the testing data the IDs present in the training set\n\n2.4.1 How many SRA IDs are duplicated within the training set?\n\n\nCode\n# How many unique that we have?\ncat(\"Number of SRA ID unique (accessions)\", length(unique(training_metadata$accession)), sep = \" \") # 5458 SRA ID uniqued\n\n\nNumber of SRA ID unique (accessions) 5458\n\n\nCode\n# Numero de SRA IDs que se repiten varias veces?\ntraining_metadata_duplicated  &lt;- table(training_metadata$accession)\nsum(training_metadata_duplicated &gt; 1) # 502 SRA IDs\n\n\n[1] 502\n\n\nCode\n# How many duplicated that we have?\ntraining_duplicated_table &lt;- training_metadata %&gt;%\n  group_by(accession) %&gt;%\n  filter(n() &gt; 1) %&gt;%   # filtra accession con más de una ocurrencia\n  summarise(duplicados = n()) %&gt;%\n  arrange(desc(duplicados))\n\n# Only IDs (502 SRA IDs)\ntraining_SRAIDs_duplicated &lt;- training_duplicated_table$accession\n\n# Obtain duplicated names\ntraining_duplicated_db &lt;- training_metadata %&gt;% \n  filter(accession %in% training_SRAIDs_duplicated)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#check-do-we-have-the-same-species",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#check-do-we-have-the-same-species",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.5 Check: Do we have the same species?",
    "text": "2.5 Check: Do we have the same species?\n\n2.5.1 Training vs public data\n\n\nCode\nintersect(training_metadata_db$scientific_name_CAMDA, sra_metadata_db$scientific_name_NCBI)\n\n\n[1] \"Neisseria gonorrhoeae\"    \"Staphylococcus aureus\"   \n[3] \"Escherichia coli\"         \"Campylobacter jejuni\"    \n[5] \"Acinetobacter baumannii\"  \"Streptococcus pneumoniae\"\n[7] \"Klebsiella pneumoniae\"    \"Salmonella enterica\"     \n[9] \"Pseudomonas aeruginosa\"  \n\n\n\n\n2.5.2 Test vs public data\n\n\nCode\nintersect(testing_metadata_cleaned$scientific_name_CAMDA, sra_metadata_db$scientific_name_NCBI)\n\n\n[1] \"Klebsiella pneumoniae\"    \"Neisseria gonorrhoeae\"   \n[3] \"Escherichia coli\"         \"Salmonella enterica\"     \n[5] \"Staphylococcus aureus\"    \"Pseudomonas aeruginosa\"  \n[7] \"Acinetobacter baumannii\"  \"Streptococcus pneumoniae\"\n[9] \"Campylobacter jejuni\"",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#step-4.-comparing-the-information-of-specie-and-accession-sra-id",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#step-4.-comparing-the-information-of-specie-and-accession-sra-id",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.6 STEP 4. Comparing the information of Specie and accession (SRA ID)",
    "text": "2.6 STEP 4. Comparing the information of Specie and accession (SRA ID)\nLoad function\n\n\nCode\nsource(\"functions/compare_sp_function.R\")\n\n\nThe resulting dataset includes two status columns: status and status_reference:\n\nstatus indicates how the species annotation from the CAMDA dataset compares to external sources:\n\nMatched_NCBI_Antibiogram: CAMDA matches both NCBI and antibiogram data.\nMatched_NCBI: CAMDA matches only NCBI data.\nMatched_Antibiogram: CAMDA matches only the antibiogram data.\nMissing_All: No sufficient external data available for comparison.\n\nstatus_reference evaluates the consistency between the two external sources (NCBI and antibiogram):\n\nGood_sources: NCBI and antibiogram annotations agree with each other.\nVerify_sources: NCBI and antibiogram annotations disagree and require further manual verification to ensure data reliability.\n\n\nWhen the species annotations provided by NCBI and the antibiogram metadata do not match, it raises concerns about the accuracy of the sample’s taxonomic identity. Such discrepancies may indicate mislabeling, contamination, or outdated records. Therefore, it is essential to verify the original sources to ensure the reliability of downstream analyses.\n\n2.6.1 Training vs public data\n\n2.6.1.1 Check species name matches between CAMDA and NCBI\nFind how many species have matching names between CAMDA and NCBI to identify correctly annotated entries.\n\n\nCode\ntraining_completeInfo_db &lt;- compare_sp(training_metadata_db, sra_metadata_db, antibiograms_metadata_db)\n\n\nWarning in left_join(., antibiograms_metadata_db, by = \"accession\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1048471 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCode\n# Global information\ntraining_completeInfo_db %&gt;%  \n  # Visualizar informacion en una tabla bonita\n  DT::datatable()\n\n\n\n\n\n\nSave data\n\n\nCode\nwrite_tsv(training_completeInfo_db, file = here(\"rawdata/TrainAndTest_cleaned\", \"Training_allstatus_sp_reference_metadata.tsv.gz\"), quote = \"none\")\n\n\n\n\n2.6.1.2 How many SRA entries are correctly annotated and how many are not?\n\n\nCode\n# Global \ntable(training_completeInfo_db$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     359                      922                     3892 \n     Mismatch_with_CAMDA              Missing_All \n                       3                      263",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#about-missing-data",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#about-missing-data",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.7 About missing data",
    "text": "2.7 About missing data\n\n\nCode\ntraining_completeInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(\n    total_samples = n(),\n    n_missing_data = sum(status == \"Missing_All\"),\n    pct_missing_data = (n_missing_data / total_samples) * 100) %&gt;%\n  arrange(desc(n_missing_data)) %&gt;%\n# Change NA by Zero\n mutate(across(everything(), ~replace_na(., 0)))\n\n\n# A tibble: 9 × 4\n  scientific_name_CAMDA    total_samples n_missing_data pct_missing_data\n  &lt;chr&gt;                            &lt;int&gt;          &lt;int&gt;            &lt;dbl&gt;\n1 Neisseria gonorrhoeae              741            127           17.1  \n2 Campylobacter jejuni               537             37            6.89 \n3 Escherichia coli                   512             35            6.84 \n4 Streptococcus pneumoniae           607             33            5.44 \n5 Staphylococcus aureus              571             19            3.33 \n6 Klebsiella pneumoniae              791              9            1.14 \n7 Pseudomonas aeruginosa             571              2            0.350\n8 Acinetobacter baumannii            488              0            0    \n9 Salmonella enterica                640              0            0    \n\n\n\n\n\n\n\n\nImportant\n\n\n\n7 out of 9 species have missing or incorrect data.\n\n\n\n2.7.0.1 Checar fuentes de informacion\nNo coicide la informacion de NCBI con la que hay en Antibiogramas\n\n\nCode\ntraining_verify_data &lt;- training_completeInfo_db %&gt;%\n  filter(status_reference == \"Verify_sources\") \n\n\n\n\nCode\ntable(training_completeInfo_db$status_reference)\n\n\n\n  Good_sources     No_sources Verify_sources \n          3892            263           1303",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#test-vs-public-data-1",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#test-vs-public-data-1",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.8 Test vs public data",
    "text": "2.8 Test vs public data\n\n2.8.0.1 Check species name matches between CAMDA and NCBI\n\n\nCode\ntest_completeInfo_db &lt;- compare_sp(testing_metadata_cleaned, sra_metadata_db, antibiograms_metadata_db)\n\n# Global information\ntest_completeInfo_db %&gt;%  \n  # Visualizar informacion en una tabla bonita\n  DT::datatable()\n\n\n\n\n\n\nSave data\n\n\nCode\nwrite_tsv(test_completeInfo_db, file = here(\"rawdata/TrainAndTest_cleaned\", \"Test_allstatus_sp_reference_metadata.tsv.gz\"), quote = \"none\")\n\n\n\n\n2.8.0.2 How many SRA entries are correctly annotated and how many are not?\n\n\nCode\n# Global \ntable(test_completeInfo_db$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     115                     1728                     1390 \n             Missing_All \n                     822 \n\n\n\n\n2.8.0.3 Checar las fuentes\n\n\nCode\ntest_verify_data &lt;- test_completeInfo_db %&gt;%\n  filter(status_reference == \"Verify_sources\") \n\n\n\n\nCode\ntable(test_completeInfo_db$status_reference)\n\n\n\n  Good_sources     No_sources Verify_sources \n          1390            822           1843",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  },
  {
    "objectID": "2_Metadata_comparing_CAMDAvsNCBI.html#step-5-reetiquetas-muestras-y-eliminar-especies-mal-anotadas",
    "href": "2_Metadata_comparing_CAMDAvsNCBI.html#step-5-reetiquetas-muestras-y-eliminar-especies-mal-anotadas",
    "title": "2  Comparing CAMDA metadata related with NCBI",
    "section": "2.9 STEP 5: Reetiquetas muestras y eliminar especies mal anotadas",
    "text": "2.9 STEP 5: Reetiquetas muestras y eliminar especies mal anotadas\nIdentify SRA IDs with inconsistent annotations that require verification\n\n\nCode\nSRA_IDs_rare_db &lt;- training_completeInfo_db %&gt;%\n  # Keep only entries where external sources (NCBI and/or antibiogram) do not fully agree\n  filter(status_reference == \"Verify_sources\") %&gt;%\n  # Ensure the NCBI scientific name is available\n  filter(!is.na(scientific_name_NCBI)) %&gt;%\n  # Exclude entries that already match the NCBI annotation\n  filter(status != \"Matched_NCBI\")\n\nSRA_IDs_rare_db\n\n\n# A tibble: 8 × 6\n  accession  scientific_name_CAMDA  scientific_name_NCBI  scientific_name_Anti…¹\n  &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt;                 &lt;chr&gt;                 \n1 SRR2101499 Staphylococcus aureus  Mycobacterium tuberc… Staphylococcus aureus \n2 ERR1218638 Escherichia coli       Klebsiella pneumoniae Escherichia coli      \n3 ERR1218722 Escherichia coli       Klebsiella pneumoniae Escherichia coli      \n4 SRR960879  Klebsiella pneumoniae  Klebsiella quasipneu… &lt;NA&gt;                  \n5 SRR850995  Klebsiella pneumoniae  Klebsiella variicola  &lt;NA&gt;                  \n6 ERR1218771 Klebsiella pneumoniae  Klebsiella quasipneu… Klebsiella pneumoniae \n7 SRR5386043 Klebsiella pneumoniae  Klebsiella quasivari… Klebsiella pneumoniae \n8 SRR6985679 Pseudomonas aeruginosa Pseudomonas paraerug… &lt;NA&gt;                  \n# ℹ abbreviated name: ¹​scientific_name_Antibiogram\n# ℹ 2 more variables: status &lt;chr&gt;, status_reference &lt;chr&gt;\n\n\nExtraer los IDs que se pueden renombrar con otra especie especie existente en CAMDA\nAdditionally, SRA IDs ERR1218638 and ERR1218722 will be reassigned to Klebsiella pneumoniae, a species included in the study. These samples were previously annotated in the CAMDA dataset as Escherichia coli.\n\n\nCode\nSRA_IDs_edited &lt;- SRA_IDs_rare_db %&gt;%\n  # Si alguno de los nombre reales encontrados en NCBI puede ser util para renombrarlo\n  filter(scientific_name_NCBI %in% unique(training_completeInfo_db$scientific_name_CAMDA))\n\n# Quedarme con solo los IDs\nSRA_IDs_edited &lt;- SRA_IDs_edited$accession\n\n\nBased on the information obtained from public datasets, we have decided to remove SRA IDs “SRR2101499”, “SRR960879”, “SRR850995”, “ERR1218771”, “SRR5386043” and “SRR6985679”, as they correspond to species that are not relevant or appropriate for the scope of this study and are considered sources of noise in the identification of antimicrobial resistance genes.\n\n\nCode\nSRA_IDs_removed &lt;- SRA_IDs_rare_db %&gt;%\n  # IDs que no se encuentran en NCBI y que estan mal, nos meten ruido\n  filter(!(scientific_name_NCBI %in% unique(training_completeInfo_db$scientific_name_CAMDA)))\n\n# Quedarme con solo los IDs\nSRA_IDs_removed &lt;- SRA_IDs_removed$accession\n\n\nEliminar la informacion y limpiar los datos\n\n\nCode\ntraining_cleanedInfo_db &lt;- training_completeInfo_db %&gt;%\n  # Eliminar Missing data (282 SRa IDs)\n  filter(status != \"Missing_All\") %&gt;%\n  # Elimianr especies mal anotadas (6 SRA IDs)\n  filter(!(accession %in% SRA_IDs_removed)) %&gt;%\n  # Renombrar especies mal anotadas\n  mutate(scientific_name_CAMDA = case_when(\n    accession %in% SRA_IDs_edited ~ \"Klebsiella pneumoniae\",\n    TRUE ~ scientific_name_CAMDA  # o cualquier columna base\n  ))\n\n\n\n\nCode\ntable(training_cleanedInfo_db$status)\n\n\n\n     Matched_Antibiogram             Matched_NCBI Matched_NCBI_Antibiogram \n                     356                      922                     3892 \n\n\nSave data\n\n\nCode\nwrite_tsv(training_cleanedInfo_db, file = here(\"rawdata/TrainAndTest_cleaned\", \"training_metadata_cleaned.tsv\"), quote = \"none\")\n\n\nVerificar los numeros totales de los SRA IDs\n\n\nCode\n# Count unique accessions per species in the training metadata\ntrain_counts_cleaned &lt;- training_cleanedInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(trainClean_num_accessions = n_distinct(accession))\n\n# Count unique accessions per species in the testing metadata\ntest_counts_cleaned &lt;- test_completeInfo_db %&gt;%\n  group_by(scientific_name_CAMDA) %&gt;%\n  summarise(testClean_num_accessions = n_distinct(accession))\n\n# Combine the counts by species, keeping all species present in the training set\ncombined_counts_completed &lt;- combined_counts %&gt;%\n  left_join(train_counts_cleaned, by = \"scientific_name_CAMDA\") %&gt;%\n  left_join(test_counts_cleaned, by = \"scientific_name_CAMDA\") \n\n# sum columns\ndf_total &lt;- combined_counts_completed %&gt;%\n  summarise(across(where(is.numeric), ~sum(.x, na.rm = TRUE))) %&gt;%\n  mutate(rowname = \"Total\") %&gt;%\n  select(rowname, everything())\n\ncombined_counts_completed &lt;- combined_counts_completed %&gt;%\n  mutate(rowname = rownames(.)) %&gt;%\n  select(rowname, everything()) %&gt;%\n  bind_rows(df_total)\n\n# Display the combined counts table\ncombined_counts_completed %&gt;% \n  select(-rowname) %&gt;%\n  DT::datatable()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Comparing CAMDA metadata related with NCBI</span>"
    ]
  }
]
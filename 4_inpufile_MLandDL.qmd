# Generating the Input File for Machine Learning and Deep Learning Models

> Aim: To prepare the dataset for downstream predictive modeling, we merged three key sources of information:
>
> -   The cleaned training and test database (`training_db_cleaned and test_db_cleaned from complete_metadata.RData`)
> -   A new dataset containing assigned MIC values for additional isolates ([`CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv))
> -   The gene family matrix derived from the pangenome analysis ([`2025_Training_and_testing_strict.tsv.gz`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/pangenomic_analysis/2025_Training_and_testing_strict.tsv.gz))
>
> This unified dataset serves as the foundation for training and evaluating machine learning (ML) and deep learning (DL) models aimed at predicting antimicrobial resistance patterns.
>
> -   **Author**: Evelia Coss
> -   **Date**: 1/July/2025
> -   **Input files:**
>     -   [`complete_metadata.RData`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/complete_metadata.RData): This RData file contains a consolidated set of key objects used in workflows for antimicrobial resistance analysis and sequencing metadata. It supports smooth transitions between preprocessing, integration, and analysis stages. See complete details in [**Chapter 2**](https://eveliacoss.github.io/CAMDA2025_metadatos/2_Preprocessing_CAMDApublicdata.html).
>     -   [`2025_Training_and_testing_strict.tsv.gz`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/rgi_analysis/2025_Training_and_testing_strict.tsv.gz)`:` Table containing results from RGI analysis using training and test datasets. This file originates from [Dataset2025](https://github.com/ccm-bioinfo/Camda_resistance_24-25/tree/main/DataSets/2025). It includes the following columns:
>         -   **accession**, **genus**, **species**, **antibiotic** - Sample metadata. Note: some species annotations may contain inconsistencies due to accession-level discrepancies.
>         -   **phenotype**, **measurement_value** - Prediction targets for modeling.
>         -   **categoria_recodificada**- Proposed standardized MIC (Minimum Inhibitory Concentration) value for each sample (old version, 2024).
>         -   **columns starting with 300...** - feature data. Contains counts of genes and SNPs conferring antibiotic resistance. Columns are labeled using ARO ids (see Section 3 for details). SNP features are labeled with the ARO id, followed by a dash (`-`) and the amino acid substitution.
>     -   [`CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv): Table containing updated annotations of standardized MIC values (`recategorized_MIC`) and newly assigned phenotypes (`assign_phenotype`) for all samples. It includes the following columns:
>         -   **genus**, **species**, **accession**, **antibiotic** - Sample metadata. Note: some species annotations may contain inconsistencies due to accession-level discrepancies.
>         -   **phenotype**, **measurement_value** - Prediction targets for modeling.
>         -   **recategorized_MIC**- Proposed standardized MIC (Minimum Inhibitory Concentration) value for each sample (new version, 2025).
>         -   **assign_phenotype** – Reassigned binary phenotype, considering only “Resistant” and “Susceptible” categories.
> -   Output files:
>     -   `training_and_test_inputfile_cleaned.tsv.gz`: Cleaned dataset (training ans test) containing standardized species names, reassigned MIC values (recategorized_mic), and curated phenotypes (assign_phenotype). This file is formatted and ready for input into machine learning (ML) and deep learning (DL) workflows. It includes the following columns:
>         -   **genus**, **species**, **accession**, **phenotype**, **antibiotic,** **measurement_value** -Sample metadata with corrected species information. *Source:* `training_db_cleaned`
>         -   **recategorized_MIC**- Updated (2025) standardized Minimum Inhibitory Concentration (MIC) values for each sample. *Source:* [`CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv)
>         -   **assign_phenotype** –Reassigned phenotype labels, limited to “Resistant” and “Susceptible” categories. *Source:* [`CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv`](https://github.com/EveliaCoss/CAMDA2025_metadatos/blob/main/rawdata/TrainAndTest_cleaned/CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv)
>         -   **columns starting with 300...** - feature data. Contains counts of genes and SNPs conferring antibiotic resistance. Columns are labeled using ARO ids (see Section 3 for details). SNP features are labeled with the ARO id, followed by a dash (`-`) and the amino acid substitution.

### Import Data

```{r}
library(tidyverse)
library(janitor)
library(here)

# > training and test database
# Load metadata cleaned and antibiogram information
load(here("rawdata/TrainAndTest_cleaned", "complete_metadata.RData"))
# antibiograms_db, test_db_cleaned, training_db_cleaned, sra_metadata_db, test_completeInfo_db, training_cleanedInfo_db

# > MIC values
new_mic_db <- read_csv(file= here("rawdata/TrainAndTest_cleaned","CAMDA25_trainnig_metadatos_filtrado_con_assign_recategorizado.csv")) %>%
   # Standardizes column names: converts them to lowercase,
  # replaces spaces and special characters with underscores
  janitor::clean_names() 
#Rows: 5420 Columns: 8

# > gene family matrix (strict)

# Read the .csv file into R
rgi_results <- read_tsv(file= here("rawdata/rgi_analysis","2025_Training_and_testing_strict.tsv.gz")) %>%
   # Standardizes column names: converts them to lowercase,
  # replaces spaces and special characters with underscores
  janitor::clean_names() 
# Rows: 9471 Columns: 1076
```

Join information according with metadata

```{r}
# columns to remove from metadata
cols_to_remove <- colnames(training_db_cleaned %>%
  select(measurement_unit:collection_date, measurement_sign, measurement_unit,
         scientific_name_CAMDA:status_reference))

training_inputfile <- training_db_cleaned %>%
  # remove columns
  select(-any_of(cols_to_remove)) 
training_inputfile$type <- "training"

test_inputfile <- test_db_cleaned %>%
  # remove columns
  select(-any_of(cols_to_remove)) 
test_inputfile$type <- "test"

# Join files 
training_and_test_inputfile <- rbind(training_inputfile, test_inputfile)
table(training_and_test_inputfile$type)
# test training 
# 4055     5721 #9776

# Join with RGI results
training_and_test_inputfile <- training_and_test_inputfile %>% 
  # Join New MIC values (accession, phenotype_assigned, mic_new)
  left_join(select(new_mic_db,
                   accession, assign_phenotype, recategorized_mic), by ="accession") %>%
  # Join pangenomic results
  left_join(select(rgi_results, -genus, -species, -phenotype, 
                   -antibiotic, -measurement_value, -categoria_recodificada), by = "accession")

dim(training_and_test_inputfile)
```

colnames

```{r}
colnames(training_and_test_inputfile)[1:30]
```

Save file

```{r}
write_tsv(training_and_test_inputfile, file = here("rawdata/TrainAndTest_cleaned", "training_and_test_inputfile_cleaned.tsv.gz"))
```
